// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file did/v1/tx.proto (package did.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MsgExecuteTx, MsgExecuteTxResponse, MsgLinkAssertion, MsgLinkAssertionResponse, MsgLinkAuthentication, MsgLinkAuthenticationResponse, MsgUnlinkAssertion, MsgUnlinkAssertionResponse, MsgUnlinkAuthentication, MsgUnlinkAuthenticationResponse, MsgUpdateParams, MsgUpdateParamsResponse } from "./tx_pb.js";

const TYPE_NAME = "did.v1.Msg";

/**
 * ExecuteTx executes a transaction on the Sonr Blockchain. It leverages
 * Macaroon for verification.
 *
 * @generated from rpc did.v1.Msg.ExecuteTx
 */
export const MsgExecuteTxService = {
  typeName: TYPE_NAME,
  method: "ExecuteTx",
  Request: MsgExecuteTx,
  Response: MsgExecuteTxResponse,
} as const;

/**
 * LinkAssertion links an assertion to a controller.
 *
 * @generated from rpc did.v1.Msg.LinkAssertion
 */
export const MsgLinkAssertionService = {
  typeName: TYPE_NAME,
  method: "LinkAssertion",
  Request: MsgLinkAssertion,
  Response: MsgLinkAssertionResponse,
} as const;

/**
 * LinkAuthentication links an authentication to a controller.
 *
 * @generated from rpc did.v1.Msg.LinkAuthentication
 */
export const MsgLinkAuthenticationService = {
  typeName: TYPE_NAME,
  method: "LinkAuthentication",
  Request: MsgLinkAuthentication,
  Response: MsgLinkAuthenticationResponse,
} as const;

/**
 * UnlinkAssertion unlinks an assertion from a controller.
 *
 * @generated from rpc did.v1.Msg.UnlinkAssertion
 */
export const MsgUnlinkAssertionService = {
  typeName: TYPE_NAME,
  method: "UnlinkAssertion",
  Request: MsgUnlinkAssertion,
  Response: MsgUnlinkAssertionResponse,
} as const;

/**
 * UnlinkAuthentication unlinks an authentication from a controller.
 *
 * @generated from rpc did.v1.Msg.UnlinkAuthentication
 */
export const MsgUnlinkAuthenticationService = {
  typeName: TYPE_NAME,
  method: "UnlinkAuthentication",
  Request: MsgUnlinkAuthentication,
  Response: MsgUnlinkAuthenticationResponse,
} as const;

/**
 * UpdateParams defines a governance operation for updating the parameters.
 *
 * @generated from rpc did.v1.Msg.UpdateParams
 */
export const MsgUpdateParamsService = {
  typeName: TYPE_NAME,
  method: "UpdateParams",
  Request: MsgUpdateParams,
  Response: MsgUpdateParamsResponse,
} as const;


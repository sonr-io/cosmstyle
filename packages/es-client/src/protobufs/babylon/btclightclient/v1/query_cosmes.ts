// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file babylon/btclightclient/v1/query.proto (package babylon.btclightclient.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryBaseHeaderRequest, QueryBaseHeaderResponse, QueryContainsBytesRequest, QueryContainsBytesResponse, QueryContainsRequest, QueryContainsResponse, QueryHashesRequest, QueryHashesResponse, QueryHeaderDepthRequest, QueryHeaderDepthResponse, QueryMainChainRequest, QueryMainChainResponse, QueryParamsRequest, QueryParamsResponse, QueryTipRequest, QueryTipResponse } from "./query_pb.js";

const TYPE_NAME = "babylon.btclightclient.v1.Query";

/**
 * Params queries the parameters of the module.
 *
 * @generated from rpc babylon.btclightclient.v1.Query.Params
 */
export const QueryParamsService = {
  typeName: TYPE_NAME,
  method: "Params",
  Request: QueryParamsRequest,
  Response: QueryParamsResponse,
} as const;

/**
 * Hashes retrieves the hashes maintained by the module.
 *
 * @generated from rpc babylon.btclightclient.v1.Query.Hashes
 */
export const QueryHashesService = {
  typeName: TYPE_NAME,
  method: "Hashes",
  Request: QueryHashesRequest,
  Response: QueryHashesResponse,
} as const;

/**
 * Contains checks whether a hash is maintained by the module.
 *
 * @generated from rpc babylon.btclightclient.v1.Query.Contains
 */
export const QueryContainsService = {
  typeName: TYPE_NAME,
  method: "Contains",
  Request: QueryContainsRequest,
  Response: QueryContainsResponse,
} as const;

/**
 * ContainsBytes is a temporary method that
 * checks whether a hash is maintained by the module.
 * See discussion at https://github.com/babylonchain/babylon/pull/132
 * for more details.
 *
 * @generated from rpc babylon.btclightclient.v1.Query.ContainsBytes
 */
export const QueryContainsBytesService = {
  typeName: TYPE_NAME,
  method: "ContainsBytes",
  Request: QueryContainsBytesRequest,
  Response: QueryContainsBytesResponse,
} as const;

/**
 * MainChain returns the canonical chain
 *
 * @generated from rpc babylon.btclightclient.v1.Query.MainChain
 */
export const QueryMainChainService = {
  typeName: TYPE_NAME,
  method: "MainChain",
  Request: QueryMainChainRequest,
  Response: QueryMainChainResponse,
} as const;

/**
 * Tip return best header on canonical chain
 *
 * @generated from rpc babylon.btclightclient.v1.Query.Tip
 */
export const QueryTipService = {
  typeName: TYPE_NAME,
  method: "Tip",
  Request: QueryTipRequest,
  Response: QueryTipResponse,
} as const;

/**
 * BaseHeader returns the base BTC header of the chain. This header is defined
 * on genesis.
 *
 * @generated from rpc babylon.btclightclient.v1.Query.BaseHeader
 */
export const QueryBaseHeaderService = {
  typeName: TYPE_NAME,
  method: "BaseHeader",
  Request: QueryBaseHeaderRequest,
  Response: QueryBaseHeaderResponse,
} as const;

/**
 * HeaderDepth returns the depth of the header in main chain or error if the
 * block is not found or it exists on fork
 *
 * @generated from rpc babylon.btclightclient.v1.Query.HeaderDepth
 */
export const QueryHeaderDepthService = {
  typeName: TYPE_NAME,
  method: "HeaderDepth",
  Request: QueryHeaderDepthRequest,
  Response: QueryHeaderDepthResponse,
} as const;


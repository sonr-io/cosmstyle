// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file cosmos/staking/v1beta1/query.proto (package cosmos.staking.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryDelegationRequest, QueryDelegationResponse, QueryDelegatorDelegationsRequest, QueryDelegatorDelegationsResponse, QueryDelegatorUnbondingDelegationsRequest, QueryDelegatorUnbondingDelegationsResponse, QueryDelegatorValidatorRequest, QueryDelegatorValidatorResponse, QueryDelegatorValidatorsRequest, QueryDelegatorValidatorsResponse, QueryHistoricalInfoRequest, QueryHistoricalInfoResponse, QueryParamsRequest, QueryParamsResponse, QueryPoolRequest, QueryPoolResponse, QueryRedelegationsRequest, QueryRedelegationsResponse, QueryUnbondingDelegationRequest, QueryUnbondingDelegationResponse, QueryValidatorDelegationsRequest, QueryValidatorDelegationsResponse, QueryValidatorRequest, QueryValidatorResponse, QueryValidatorsRequest, QueryValidatorsResponse, QueryValidatorUnbondingDelegationsRequest, QueryValidatorUnbondingDelegationsResponse } from "./query_pb.js";

const TYPE_NAME = "cosmos.staking.v1beta1.Query";

/**
 * Validators queries all validators that match the given status.
 *
 * When called from another module, this query might consume a high amount of
 * gas if the pagination field is incorrectly set.
 *
 * @generated from rpc cosmos.staking.v1beta1.Query.Validators
 */
export const QueryValidatorsService = {
  typeName: TYPE_NAME,
  method: "Validators",
  Request: QueryValidatorsRequest,
  Response: QueryValidatorsResponse,
} as const;

/**
 * Validator queries validator info for given validator address.
 *
 * @generated from rpc cosmos.staking.v1beta1.Query.Validator
 */
export const QueryValidatorService = {
  typeName: TYPE_NAME,
  method: "Validator",
  Request: QueryValidatorRequest,
  Response: QueryValidatorResponse,
} as const;

/**
 * ValidatorDelegations queries delegate info for given validator.
 *
 * When called from another module, this query might consume a high amount of
 * gas if the pagination field is incorrectly set.
 *
 * @generated from rpc cosmos.staking.v1beta1.Query.ValidatorDelegations
 */
export const QueryValidatorDelegationsService = {
  typeName: TYPE_NAME,
  method: "ValidatorDelegations",
  Request: QueryValidatorDelegationsRequest,
  Response: QueryValidatorDelegationsResponse,
} as const;

/**
 * ValidatorUnbondingDelegations queries unbonding delegations of a validator.
 *
 * When called from another module, this query might consume a high amount of
 * gas if the pagination field is incorrectly set.
 *
 * @generated from rpc cosmos.staking.v1beta1.Query.ValidatorUnbondingDelegations
 */
export const QueryValidatorUnbondingDelegationsService = {
  typeName: TYPE_NAME,
  method: "ValidatorUnbondingDelegations",
  Request: QueryValidatorUnbondingDelegationsRequest,
  Response: QueryValidatorUnbondingDelegationsResponse,
} as const;

/**
 * Delegation queries delegate info for given validator delegator pair.
 *
 * @generated from rpc cosmos.staking.v1beta1.Query.Delegation
 */
export const QueryDelegationService = {
  typeName: TYPE_NAME,
  method: "Delegation",
  Request: QueryDelegationRequest,
  Response: QueryDelegationResponse,
} as const;

/**
 * UnbondingDelegation queries unbonding info for given validator delegator
 * pair.
 *
 * @generated from rpc cosmos.staking.v1beta1.Query.UnbondingDelegation
 */
export const QueryUnbondingDelegationService = {
  typeName: TYPE_NAME,
  method: "UnbondingDelegation",
  Request: QueryUnbondingDelegationRequest,
  Response: QueryUnbondingDelegationResponse,
} as const;

/**
 * DelegatorDelegations queries all delegations of a given delegator address.
 *
 * When called from another module, this query might consume a high amount of
 * gas if the pagination field is incorrectly set.
 *
 * @generated from rpc cosmos.staking.v1beta1.Query.DelegatorDelegations
 */
export const QueryDelegatorDelegationsService = {
  typeName: TYPE_NAME,
  method: "DelegatorDelegations",
  Request: QueryDelegatorDelegationsRequest,
  Response: QueryDelegatorDelegationsResponse,
} as const;

/**
 * DelegatorUnbondingDelegations queries all unbonding delegations of a given
 * delegator address.
 *
 * When called from another module, this query might consume a high amount of
 * gas if the pagination field is incorrectly set.
 *
 * @generated from rpc cosmos.staking.v1beta1.Query.DelegatorUnbondingDelegations
 */
export const QueryDelegatorUnbondingDelegationsService = {
  typeName: TYPE_NAME,
  method: "DelegatorUnbondingDelegations",
  Request: QueryDelegatorUnbondingDelegationsRequest,
  Response: QueryDelegatorUnbondingDelegationsResponse,
} as const;

/**
 * Redelegations queries redelegations of given address.
 *
 * When called from another module, this query might consume a high amount of
 * gas if the pagination field is incorrectly set.
 *
 * @generated from rpc cosmos.staking.v1beta1.Query.Redelegations
 */
export const QueryRedelegationsService = {
  typeName: TYPE_NAME,
  method: "Redelegations",
  Request: QueryRedelegationsRequest,
  Response: QueryRedelegationsResponse,
} as const;

/**
 * DelegatorValidators queries all validators info for given delegator
 * address.
 *
 * When called from another module, this query might consume a high amount of
 * gas if the pagination field is incorrectly set.
 *
 * @generated from rpc cosmos.staking.v1beta1.Query.DelegatorValidators
 */
export const QueryDelegatorValidatorsService = {
  typeName: TYPE_NAME,
  method: "DelegatorValidators",
  Request: QueryDelegatorValidatorsRequest,
  Response: QueryDelegatorValidatorsResponse,
} as const;

/**
 * DelegatorValidator queries validator info for given delegator validator
 * pair.
 *
 * @generated from rpc cosmos.staking.v1beta1.Query.DelegatorValidator
 */
export const QueryDelegatorValidatorService = {
  typeName: TYPE_NAME,
  method: "DelegatorValidator",
  Request: QueryDelegatorValidatorRequest,
  Response: QueryDelegatorValidatorResponse,
} as const;

/**
 * HistoricalInfo queries the historical info for given height.
 *
 * @generated from rpc cosmos.staking.v1beta1.Query.HistoricalInfo
 */
export const QueryHistoricalInfoService = {
  typeName: TYPE_NAME,
  method: "HistoricalInfo",
  Request: QueryHistoricalInfoRequest,
  Response: QueryHistoricalInfoResponse,
} as const;

/**
 * Pool queries the pool info.
 *
 * @generated from rpc cosmos.staking.v1beta1.Query.Pool
 */
export const QueryPoolService = {
  typeName: TYPE_NAME,
  method: "Pool",
  Request: QueryPoolRequest,
  Response: QueryPoolResponse,
} as const;

/**
 * Parameters queries the staking parameters.
 *
 * @generated from rpc cosmos.staking.v1beta1.Query.Params
 */
export const QueryParamsService = {
  typeName: TYPE_NAME,
  method: "Params",
  Request: QueryParamsRequest,
  Response: QueryParamsResponse,
} as const;


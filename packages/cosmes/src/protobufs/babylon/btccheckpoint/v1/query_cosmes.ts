// @generated by protoc-gen-cosmes v0.0.1 with parameter "target=ts"
// @generated from file babylon/btccheckpoint/v1/query.proto (package babylon.btccheckpoint.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { QueryBtcCheckpointInfoRequest, QueryBtcCheckpointInfoResponse, QueryBtcCheckpointsInfoRequest, QueryBtcCheckpointsInfoResponse, QueryEpochSubmissionsRequest, QueryEpochSubmissionsResponse, QueryParamsRequest, QueryParamsResponse } from "./query_pb.js";

const TYPE_NAME = "babylon.btccheckpoint.v1.Query";

/**
 * Parameters queries the parameters of the module.
 *
 * @generated from rpc babylon.btccheckpoint.v1.Query.Params
 */
export const QueryParamsService = {
  typeName: TYPE_NAME,
  method: "Params",
  Request: QueryParamsRequest,
  Response: QueryParamsResponse,
} as const;

/**
 * BtcCheckpointInfo returns checkpoint info for a given epoch
 *
 * @generated from rpc babylon.btccheckpoint.v1.Query.BtcCheckpointInfo
 */
export const QueryBtcCheckpointInfoService = {
  typeName: TYPE_NAME,
  method: "BtcCheckpointInfo",
  Request: QueryBtcCheckpointInfoRequest,
  Response: QueryBtcCheckpointInfoResponse,
} as const;

/**
 * BtcCheckpointsInfo returns checkpoint info for a range of epochs
 *
 * @generated from rpc babylon.btccheckpoint.v1.Query.BtcCheckpointsInfo
 */
export const QueryBtcCheckpointsInfoService = {
  typeName: TYPE_NAME,
  method: "BtcCheckpointsInfo",
  Request: QueryBtcCheckpointsInfoRequest,
  Response: QueryBtcCheckpointsInfoResponse,
} as const;

/**
 * EpochSubmissions returns all submissions for a given epoch
 *
 * @generated from rpc babylon.btccheckpoint.v1.Query.EpochSubmissions
 */
export const QueryEpochSubmissionsService = {
  typeName: TYPE_NAME,
  method: "EpochSubmissions",
  Request: QueryEpochSubmissionsRequest,
  Response: QueryEpochSubmissionsResponse,
} as const;


// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file babylon/finality/v1/tx.proto (package babylon.finality.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Params } from "./params_pb.js";

/**
 * MsgAddFinalitySig defines a message for adding a finality vote
 *
 * @generated from message babylon.finality.v1.MsgAddFinalitySig
 */
export class MsgAddFinalitySig extends Message<MsgAddFinalitySig> {
  /**
   * @generated from field: string signer = 1;
   */
  signer = "";

  /**
   * fp_btc_pk is the BTC PK of the finality provider that casts this vote
   *
   * @generated from field: bytes fp_btc_pk = 2;
   */
  fpBtcPk = new Uint8Array(0);

  /**
   * block_height is the height of the voted block
   *
   * @generated from field: uint64 block_height = 3;
   */
  blockHeight = protoInt64.zero;

  /**
   * block_app_hash is the AppHash of the voted block
   *
   * @generated from field: bytes block_app_hash = 4;
   */
  blockAppHash = new Uint8Array(0);

  /**
   * finality_sig is the finality signature to this block
   * where finality signature is an EOTS signature, i.e.,
   * the `s` in a Schnorr signature `(r, s)`
   * `r` is the public randomness that is already committed by the finality provider
   *
   * @generated from field: bytes finality_sig = 5;
   */
  finalitySig = new Uint8Array(0);

  constructor(data?: PartialMessage<MsgAddFinalitySig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "babylon.finality.v1.MsgAddFinalitySig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "fp_btc_pk", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "block_height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "block_app_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 5, name: "finality_sig", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddFinalitySig {
    return new MsgAddFinalitySig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddFinalitySig {
    return new MsgAddFinalitySig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddFinalitySig {
    return new MsgAddFinalitySig().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAddFinalitySig | PlainMessage<MsgAddFinalitySig> | undefined, b: MsgAddFinalitySig | PlainMessage<MsgAddFinalitySig> | undefined): boolean {
    return proto3.util.equals(MsgAddFinalitySig, a, b);
  }
}

/**
 * MsgAddFinalitySigResponse is the response to the MsgAddFinalitySig message
 *
 * @generated from message babylon.finality.v1.MsgAddFinalitySigResponse
 */
export class MsgAddFinalitySigResponse extends Message<MsgAddFinalitySigResponse> {
  constructor(data?: PartialMessage<MsgAddFinalitySigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "babylon.finality.v1.MsgAddFinalitySigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgAddFinalitySigResponse {
    return new MsgAddFinalitySigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgAddFinalitySigResponse {
    return new MsgAddFinalitySigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgAddFinalitySigResponse {
    return new MsgAddFinalitySigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgAddFinalitySigResponse | PlainMessage<MsgAddFinalitySigResponse> | undefined, b: MsgAddFinalitySigResponse | PlainMessage<MsgAddFinalitySigResponse> | undefined): boolean {
    return proto3.util.equals(MsgAddFinalitySigResponse, a, b);
  }
}

/**
 * MsgCommitPubRandList defines a message for committing a list of public randomness for EOTS
 *
 * @generated from message babylon.finality.v1.MsgCommitPubRandList
 */
export class MsgCommitPubRandList extends Message<MsgCommitPubRandList> {
  /**
   * @generated from field: string signer = 1;
   */
  signer = "";

  /**
   * fp_btc_pk is the BTC PK of the finality provider that commits the public randomness
   *
   * @generated from field: bytes fp_btc_pk = 2;
   */
  fpBtcPk = new Uint8Array(0);

  /**
   * start_height is the start block height of the list of public randomness
   *
   * @generated from field: uint64 start_height = 3;
   */
  startHeight = protoInt64.zero;

  /**
   * pub_rand_list is the list of public randomness
   *
   * @generated from field: repeated bytes pub_rand_list = 4;
   */
  pubRandList: Uint8Array[] = [];

  /**
   * sig is the signature on (start_height || pub_rand_list) signed by 
   * SK corresponding to fp_btc_pk. This prevents others to commit public
   * randomness on behalf of fp_btc_pk
   * TODO: another option is to restrict signer to correspond to fp_btc_pk. This restricts
   * the tx submitter to be the holder of fp_btc_pk. Decide this later
   *
   * @generated from field: bytes sig = 5;
   */
  sig = new Uint8Array(0);

  constructor(data?: PartialMessage<MsgCommitPubRandList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "babylon.finality.v1.MsgCommitPubRandList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "signer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "fp_btc_pk", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "start_height", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "pub_rand_list", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
    { no: 5, name: "sig", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCommitPubRandList {
    return new MsgCommitPubRandList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCommitPubRandList {
    return new MsgCommitPubRandList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCommitPubRandList {
    return new MsgCommitPubRandList().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCommitPubRandList | PlainMessage<MsgCommitPubRandList> | undefined, b: MsgCommitPubRandList | PlainMessage<MsgCommitPubRandList> | undefined): boolean {
    return proto3.util.equals(MsgCommitPubRandList, a, b);
  }
}

/**
 * MsgCommitPubRandListResponse is the response to the MsgCommitPubRandList message
 *
 * @generated from message babylon.finality.v1.MsgCommitPubRandListResponse
 */
export class MsgCommitPubRandListResponse extends Message<MsgCommitPubRandListResponse> {
  constructor(data?: PartialMessage<MsgCommitPubRandListResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "babylon.finality.v1.MsgCommitPubRandListResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCommitPubRandListResponse {
    return new MsgCommitPubRandListResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCommitPubRandListResponse {
    return new MsgCommitPubRandListResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCommitPubRandListResponse {
    return new MsgCommitPubRandListResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCommitPubRandListResponse | PlainMessage<MsgCommitPubRandListResponse> | undefined, b: MsgCommitPubRandListResponse | PlainMessage<MsgCommitPubRandListResponse> | undefined): boolean {
    return proto3.util.equals(MsgCommitPubRandListResponse, a, b);
  }
}

/**
 * MsgUpdateParams defines a message for updating finality module parameters.
 *
 * @generated from message babylon.finality.v1.MsgUpdateParams
 */
export class MsgUpdateParams extends Message<MsgUpdateParams> {
  /**
   * authority is the address of the governance account.
   * just FYI: cosmos.AddressString marks that this field should use type alias
   * for AddressString instead of string, but the functionality is not yet implemented
   * in cosmos-proto
   *
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * params defines the finality parameters to update.
   *
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: babylon.finality.v1.Params params = 2;
   */
  params?: Params;

  constructor(data?: PartialMessage<MsgUpdateParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "babylon.finality.v1.MsgUpdateParams";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: Params },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParams {
    return new MsgUpdateParams().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined, b: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParams, a, b);
  }
}

/**
 * MsgUpdateParamsResponse is the response to the MsgUpdateParams message.
 *
 * @generated from message babylon.finality.v1.MsgUpdateParamsResponse
 */
export class MsgUpdateParamsResponse extends Message<MsgUpdateParamsResponse> {
  constructor(data?: PartialMessage<MsgUpdateParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "babylon.finality.v1.MsgUpdateParamsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined, b: MsgUpdateParamsResponse | PlainMessage<MsgUpdateParamsResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateParamsResponse, a, b);
  }
}

